int clk1,clk2;
        
     #define PORT_A  0x7d00
     #define PORT_B  0x7d01
     #define PORT_C  0x7d02
     #define CTRL    0x7d03
                
     UCHAR add_column,key_code; 
     UCHAR  line_scan[4]={0x0e,0x0d,0x0b,0x07};
     UCHAR  temp;
     int i;

	 io_write(CTRL,0x82);  // 初始化8255A，A方式0输出，B口方式0输入

lp:
     io_write(PORT_A,0x0);     // A口输出全0，判有无键按下
     add_column = io_read(PORT_B);      // 读B口
     add_column = add_column & 0x0f;
     if (add_column == 0x0f)  {goto lp; }// 
     clk1=clock();
	 do
		{clk2=clock();}
	  while((clk2-clk1)<20);
	 for(i=0;i<=3;i++)
	 { io_write(PORT_A,line_scan[i]);     // A口输出行扫描码
   	   add_column = io_read(PORT_B);      // 读B口
       add_column = add_column & 0x0f;
       if (add_column == 0x0f)  {goto next; }//
	  
	   temp=line_scan[i];
	   temp=temp<<4;
	   key_code=temp+add_column;
	   switch(key_code)
		{case 0xee: key_code=0;break;
                 case 0xed: key_code=1;break;
                 case 0xeb: key_code=2;break;
                 case 0xe7: key_code=3;break;
                 case 0xde: key_code=4;break;
                 case 0xdd: key_code=5;break;
                 case 0xdb: key_code=6;break;
                 case 0xd7: key_code=7;break;
                 case 0xbe: key_code=8;break;
                 case 0xbd: key_code=9;break;
                 default: key_code=10;break;
		}
	   
           if(key_code>9)goto exit0;
           io_write(PORT_C,0x80+key_code);
            do
		{clk2=clock();}
	   while((clk2-clk1)<400);    
       goto lp;
next:  ;
	 }	 
      goto lp;
exit0:
