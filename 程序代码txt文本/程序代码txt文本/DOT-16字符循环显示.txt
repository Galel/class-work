//根据需要定义局部变量
 	
  unsigned int  i,m;
   long int j,p; 
   UCHAR code[16][8]={{0x1f,0x28,0x48,0x88,0x48,0x28,0x1f,0x0},  //A
   {0xff,0x91,0x91,0x91,0x91,0x91,0x6e,0x0},  //B
   {0x7e,0x81,0x81,0x81,0x81,0x81,0x46,0x0},  //C
   {0xff,0x81,0x81,0x81,0x81,0x81,0x7e,0x0},  //D
   {0xff,0x91,0x91,0x91,0x91,0x91,0x81,0x0},  //E
   {0xff,0x90,0x90,0x90,0x90,0x90,0x80,0x0},  //f
   {0x7e,0x83,0x85,0x89,0x91,0xa1,0x7e,0x0},  //0
   {0x0,0x0,0x0,0x0,0x0,0xff,0x0,0x0},        //1
   {0x4f,0x91,0x91,0x91,0x91,0x91,0x61,0x0},  //2
   {0x42,0x91,0x91,0x91,0x91,0x91,0x6e,0x0},  //3
   {0x0c,0x14,0x24,0x44,0x84,0xff,0x04,0x0},  //4
   {0xf6,0x91,0x91,0x91,0x91,0x91,0x8e,0x0},  //5
   {0x7e,0x91,0x91,0x91,0x91,0x91,0x4e,0x0},  //6
   {0x80,0x80,0x80,0x80,0x80,0x9f,0xe0,0x0},  //7
   {0x6e,0x91,0x91,0x91,0x91,0x91,0x6e,0x0},  //8
   {0x62,0x91,0x91,0x91,0x91,0x91,0x7e,0x0}   //9
   };
					
	
    printf("\n将A口设置成方式0输出, B口设置成方式0输出 \n");
    io_write(0x7d03,0x81); 
ll:
for(m=0;m<16;m++)
{ i=1;  
for(p=0;p<1000;p++)  //  决定字符之间的间隔时间
{   
	io_write(0x7d01,i);
  
	switch(i){
	case 0x01: io_write(0x7d00,code[m][0]);
		       break;
	case 0x02: io_write(0x7d00,code[m][1]);
		       break;
	case 0x04: io_write(0x7d00,code[m][2]);
		       break;
    case 0x08: io_write(0x7d00,code[m][3]);
		       break;
	case 0x10: io_write(0x7d00,code[m][4]);
		       break;
	case 0x20: io_write(0x7d00,code[m][5]);
		       break;	   
	case 0x40: io_write(0x7d00,code[m][6]);
		       break;	   
	case 0x80: io_write(0x7d00,code[m][7]);
		       break;	  
	default:   io_write(0x7d00,0);
	   	       break;
	}
	for(j=0;j<100000;j++);  // 字符列间隔时间（决定是否闪烁）
	io_write(0x7d00,0);
	i=i<<1;if(i>0x80) i=0x01;
	for(j=0;j<10000;j++);
}
}

goto ll;

    printf("\n**************************************\n");
    printf("\n按回车键，程序结束运行。 \n");
    getchar();